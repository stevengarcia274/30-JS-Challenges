function Circle(x, y, dx, dy, radius){
    this.x = x;
    this.y = y;
    this.dx = dx;
    this.dy = dy
    this.radius = radius;

    this.draw = function(){
        c.beginPath();

        c.arc(this.x, this.y, this.radius, 0, Math.PI* 2, false);
        c.stroke();
    }

    this.update = function(){

        this.draw();

        if((this.x + this.radius > innerWidth) || this.x - this.radius < 0){
            this.dx = -this.dx;
        }

        if((this.y + this.radius > innerHeight) || this.y - this.radius < 0){
            this.dy = -this.dy;;
        }

        this.y += this.dy;
        this.x += this.dx;

        

    }

}


const radius = 40;

let x = Math.floor(Math.random() * innerWidth);
let dx = (Math.random() - 0.5) * 35;
let y = Math.floor(Math.random() * innerHeight);
let dy = (Math.random() - 0.5) * 35;



let circleArr = [];

for(let i = 0; i < 100; i++){
    const radius = 40;
    let x = Math.floor(Math.random() * innerWidth);
    let dx = (Math.random() - 0.5) * 35;
    let y = Math.floor(Math.random() * innerHeight);
    let dy = (Math.random() - 0.5) * 35;

    circleArr.push(new Circle(x, y, dx, dy, radius));

}

console.log(circleArr);


function animate(){
    requestAnimationFrame(animate);
    c.clearRect(0, 0, innerWidth, innerHeight);

    for(let x in circleArr){
        circleArr[x].update();
    }


}
animate();


function rgbValue(){
    let value = Math.floor(Math.random() * 256)
    console.log(value);
    return value;
}

